{"ast":null,"code":"var _jsxFileName = \"/Users/dotronghieu/Documents/vmc/wallet-graph-2d/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useMemo, useCallback } from \"react\";\nimport ForceGraph2D from \"react-force-graph-2d\";\nimport { graphData as originalGraphData } from \"./data/graphData\";\nimport AddressList from \"./table\";\nimport \"./app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const graphRef = useRef();\n\n  // ---- State -------------------------------------------------\n  // Which groups are globally allowed to be shown\n  const [visibleGroups, setVisibleGroups] = useState([1, 2]);\n\n  // Per-node visibility (eye icon in the table)\n  const [nodeVis, setNodeVis] = useState(() => Object.fromEntries(originalGraphData.nodes.map(n => [n.id, !!n.visible])));\n  useEffect(() => {}, [originalGraphData]);\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  // ---- Helpers -----------------------------------------------\n  const getNodeId = node => typeof node === \"object\" ? node.id : node;\n\n  // Final “isVisible” decision = group is visible AND node eye toggle is true\n  const visibleNodeIds = useMemo(() => {\n    const ids = new Set();\n    for (const n of originalGraphData.nodes) {\n      if (visibleGroups.includes(n.group) && nodeVis[n.id] !== false) {\n        ids.add(n.id);\n      }\n    }\n    return ids;\n  }, [visibleGroups, nodeVis]);\n\n  // For the table: same original list, but with a computed .visible flag\n  const nodesForTable = useMemo(() => originalGraphData.nodes.map(n => ({\n    ...n,\n    visible: visibleNodeIds.has(n.id)\n  })), [visibleNodeIds]);\n\n  // ---- ForceGraph config -------------------------------------\n  useEffect(() => {\n    if (!graphRef.current) return;\n    // Link distance\n    graphRef.current.d3Force(\"link\").distance(link => link.customLength || 50);\n  }, []);\n\n  // Re-heat after visibility / group changes\n  useEffect(() => {\n    if (!graphRef.current) return;\n    graphRef.current.d3ReheatSimulation();\n    // Optionally keep view nice:\n    // graphRef.current.zoomToFit(600, 80);\n  }, [visibleNodeIds, visibleGroups]);\n\n  // ---- UI actions --------------------------------------------\n  const toggleGroup = useCallback(group => {\n    setVisibleGroups(prev => prev.includes(group) ? prev.filter(g => g !== group) : [...prev, group]);\n  }, []);\n  const handleClickNode = useCallback(node => {\n    setSelectedNode(node.id);\n  }, []);\n  const onToggleVisible = useCallback(id => {\n    setNodeVis(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  }, []);\n\n  // ---- Renderers ---------------------------------------------\n  const renderNode = useCallback((node, ctx) => {\n    const radius = 12;\n    if (!isFinite(node.x) || !isFinite(node.y)) return;\n\n    // Outer ring\n    ctx.beginPath();\n    ctx.arc(node.x, node.y, radius, 0, 2 * Math.PI, false);\n    ctx.fillStyle = \"#ffffff\";\n    ctx.fill();\n\n    // Inner gradient\n    const innerRadius = radius - 1;\n    const gradient = ctx.createRadialGradient(node.x, node.y, innerRadius / 4, node.x, node.y, innerRadius);\n    gradient.addColorStop(0, node.group === 1 ? \"#ffcc00\" : \"#95D5E9\");\n    gradient.addColorStop(1, \"#000000\");\n    ctx.beginPath();\n    ctx.arc(node.x, node.y, innerRadius, 0, 2 * Math.PI, false);\n    ctx.fillStyle = gradient;\n    ctx.fill();\n  }, []);\n\n  // ---- JSX ---------------------------------------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [1, 2].map(group => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleGroup(group),\n        children: visibleGroups.includes(group) ? `Hide Group ${group}` : `Show Group ${group}`\n      }, group, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddressList, {\n      nodes: nodesForTable,\n      selectedId: selectedNode,\n      onToggleVisible: onToggleVisible\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n      ref: graphRef,\n      graphData: originalGraphData,\n      backgroundColor: \"#091024\",\n      nodeAutoColorBy: \"group\",\n      nodeLabel: \"name\",\n      linkDirectionalParticles: 2,\n      linkDirectionalParticleSpeed: d => d.value * 0.001,\n      linkWidth: d => d.value * 0.1,\n      linkColor: () => \"#ffffff\",\n      linkDirectionalArrowLength: 8,\n      linkDirectionalArrowRelPos: 0.8,\n      onNodeClick: handleClickNode,\n      d3Force: \"charge\",\n      d3VelocityDecay: 0.5,\n      nodeCanvasObject: renderNode,\n      minZoom: 0.5,\n      maxZoom: 5\n      // The magic: don't mutate data, just hide visually\n      ,\n      nodeVisibility: node => visibleNodeIds.has(node.id),\n      linkVisibility: link => visibleNodeIds.has(getNodeId(link.source)) && visibleNodeIds.has(getNodeId(link.target))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"z30+udT5vqW7eUp4zlxLJQtVmm4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useMemo","useCallback","ForceGraph2D","graphData","originalGraphData","AddressList","jsxDEV","_jsxDEV","App","_s","graphRef","visibleGroups","setVisibleGroups","nodeVis","setNodeVis","Object","fromEntries","nodes","map","n","id","visible","selectedNode","setSelectedNode","getNodeId","node","visibleNodeIds","ids","Set","includes","group","add","nodesForTable","has","current","d3Force","distance","link","customLength","d3ReheatSimulation","toggleGroup","prev","filter","g","handleClickNode","onToggleVisible","renderNode","ctx","radius","isFinite","x","y","beginPath","arc","Math","PI","fillStyle","fill","innerRadius","gradient","createRadialGradient","addColorStop","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","selectedId","ref","backgroundColor","nodeAutoColorBy","nodeLabel","linkDirectionalParticles","linkDirectionalParticleSpeed","d","value","linkWidth","linkColor","linkDirectionalArrowLength","linkDirectionalArrowRelPos","onNodeClick","d3VelocityDecay","nodeCanvasObject","minZoom","maxZoom","nodeVisibility","linkVisibility","source","target","_c","$RefreshReg$"],"sources":["/Users/dotronghieu/Documents/vmc/wallet-graph-2d/src/App.js"],"sourcesContent":["import React, {\n  useRef,\n  useEffect,\n  useState,\n  useMemo,\n  useCallback,\n} from \"react\";\nimport ForceGraph2D from \"react-force-graph-2d\";\nimport { graphData as originalGraphData } from \"./data/graphData\";\nimport AddressList from \"./table\";\nimport \"./app.css\";\n\nfunction App() {\n  const graphRef = useRef();\n\n  // ---- State -------------------------------------------------\n  // Which groups are globally allowed to be shown\n  const [visibleGroups, setVisibleGroups] = useState([1, 2]);\n\n  // Per-node visibility (eye icon in the table)\n  const [nodeVis, setNodeVis] = useState(() =>\n    Object.fromEntries(originalGraphData.nodes.map((n) => [n.id, !!n.visible]))\n  );\n\n  useEffect(() => {},[originalGraphData]);\n\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  // ---- Helpers -----------------------------------------------\n  const getNodeId = (node) => (typeof node === \"object\" ? node.id : node);\n\n  // Final “isVisible” decision = group is visible AND node eye toggle is true\n  const visibleNodeIds = useMemo(() => {\n    const ids = new Set();\n    for (const n of originalGraphData.nodes) {\n      if (visibleGroups.includes(n.group) && nodeVis[n.id] !== false) {\n        ids.add(n.id);\n      }\n    }\n    return ids;\n  }, [visibleGroups, nodeVis]);\n\n  // For the table: same original list, but with a computed .visible flag\n  const nodesForTable = useMemo(\n    () =>\n      originalGraphData.nodes.map((n) => ({\n        ...n,\n        visible: visibleNodeIds.has(n.id),\n      })),\n    [visibleNodeIds]\n  );\n\n  // ---- ForceGraph config -------------------------------------\n  useEffect(() => {\n    if (!graphRef.current) return;\n    // Link distance\n    graphRef.current\n      .d3Force(\"link\")\n      .distance((link) => link.customLength || 50);\n  }, []);\n\n  // Re-heat after visibility / group changes\n  useEffect(() => {\n    if (!graphRef.current) return;\n    graphRef.current.d3ReheatSimulation();\n    // Optionally keep view nice:\n    // graphRef.current.zoomToFit(600, 80);\n  }, [visibleNodeIds, visibleGroups]);\n\n  // ---- UI actions --------------------------------------------\n  const toggleGroup = useCallback((group) => {\n    setVisibleGroups((prev) =>\n      prev.includes(group) ? prev.filter((g) => g !== group) : [...prev, group]\n    );\n  }, []);\n\n  const handleClickNode = useCallback((node) => {\n    setSelectedNode(node.id);\n  }, []);\n\n  const onToggleVisible = useCallback((id) => {\n    setNodeVis((prev) => ({ ...prev, [id]: !prev[id] }));\n  }, []);\n\n  // ---- Renderers ---------------------------------------------\n  const renderNode = useCallback((node, ctx) => {\n    const radius = 12;\n    if (!isFinite(node.x) || !isFinite(node.y)) return;\n\n    // Outer ring\n    ctx.beginPath();\n    ctx.arc(node.x, node.y, radius, 0, 2 * Math.PI, false);\n    ctx.fillStyle = \"#ffffff\";\n    ctx.fill();\n\n    // Inner gradient\n    const innerRadius = radius - 1;\n    const gradient = ctx.createRadialGradient(\n      node.x,\n      node.y,\n      innerRadius / 4,\n      node.x,\n      node.y,\n      innerRadius\n    );\n    gradient.addColorStop(0, node.group === 1 ? \"#ffcc00\" : \"#95D5E9\");\n    gradient.addColorStop(1, \"#000000\");\n\n    ctx.beginPath();\n    ctx.arc(node.x, node.y, innerRadius, 0, 2 * Math.PI, false);\n    ctx.fillStyle = gradient;\n    ctx.fill();\n  }, []);\n\n  // ---- JSX ---------------------------------------------------\n  return (\n    <div className=\"app-container\">\n      <div className=\"controls\">\n        {[1, 2].map((group) => (\n          <button key={group} onClick={() => toggleGroup(group)}>\n            {visibleGroups.includes(group)\n              ? `Hide Group ${group}`\n              : `Show Group ${group}`}\n          </button>\n        ))}\n      </div>\n\n      <AddressList\n        nodes={nodesForTable}\n        selectedId={selectedNode}\n        onToggleVisible={onToggleVisible}\n      />\n\n      <ForceGraph2D\n        ref={graphRef}\n        graphData={originalGraphData}\n        backgroundColor=\"#091024\"\n        nodeAutoColorBy=\"group\"\n        nodeLabel=\"name\"\n        linkDirectionalParticles={2}\n        linkDirectionalParticleSpeed={(d) => d.value * 0.001}\n        linkWidth={(d) => d.value * 0.1}\n        linkColor={() => \"#ffffff\"}\n        linkDirectionalArrowLength={8}\n        linkDirectionalArrowRelPos={0.8}\n        onNodeClick={handleClickNode}\n        d3Force=\"charge\"\n        d3VelocityDecay={0.5}\n        nodeCanvasObject={renderNode}\n        minZoom={0.5}\n        maxZoom={5}\n        // The magic: don't mutate data, just hide visually\n        nodeVisibility={(node) => visibleNodeIds.has(node.id)}\n        linkVisibility={(link) =>\n          visibleNodeIds.has(getNodeId(link.source)) &&\n          visibleNodeIds.has(getNodeId(link.target))\n        }\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}